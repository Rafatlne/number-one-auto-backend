openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/articles/:
    get:
      operationId: articles_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - articles
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticleList'
          description: ''
  /api/articles/{id}/:
    get:
      operationId: articles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this article.
        required: true
      tags:
      - articles
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
  /api/articles/personalized-feed/:
    get:
      operationId: articles_personalized_feed_retrieve
      tags:
      - articles
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: ''
  /api/auth/:
    get:
      operationId: auth_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pagesize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserRegistrationWithEmailList'
          description: ''
    post:
      operationId: auth_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
  /api/auth/{id}/:
    get:
      operationId: auth_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
    put:
      operationId: auth_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
    patch:
      operationId: auth_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRegistrationWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRegistrationWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRegistrationWithEmail'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
    delete:
      operationId: auth_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
  /api/auth/register/:
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationWithEmail'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistrationWithEmail'
          description: ''
  /api/countries/:
    get:
      operationId: countries_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pagesize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - countries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
  /api/countries/{id}/:
    get:
      operationId: countries_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this country.
        required: true
      tags:
      - countries
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/sources/:
    get:
      operationId: sources_list
      parameters:
      - in: query
        name: country_id
        schema:
          type: string
        description: Filter sources by country IDs (comma-separated)
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pagesize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - sources
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSourceList'
          description: ''
  /api/sources/{id}/:
    get:
      operationId: sources_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this source.
        required: true
      tags:
      - sources
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: ''
  /api/token-auth/:
    post:
      operationId: token_auth_create
      tags:
      - token-auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/user-preferences/:
    get:
      operationId: user_preferences_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pagesize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - user-preferences
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserPreferenceList'
          description: ''
  /api/user-preferences/{id}/:
    get:
      operationId: user_preferences_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user preference.
        required: true
      tags:
      - user-preferences
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    put:
      operationId: user_preferences_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user preference.
        required: true
      tags:
      - user-preferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPreference'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    patch:
      operationId: user_preferences_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user preference.
        required: true
      tags:
      - user-preferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
  /api/user-preferences/my_preferences/:
    get:
      operationId: user_preferences_my_preferences_retrieve
      tags:
      - user-preferences
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
  /api/user-preferences/update-my-preferences/:
    put:
      operationId: user_preferences_update_my_preferences_update
      tags:
      - user-preferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPreference'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
    patch:
      operationId: user_preferences_update_my_preferences_partial_update
      tags:
      - user-preferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPreference'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pagesize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/admins/:
    get:
      operationId: users_admins_retrieve
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/current/:
    get:
      operationId: users_current_retrieve
      tags:
      - users
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
        summary:
          type: string
          nullable: true
        article_url:
          type: string
          format: uri
          maxLength: 200
        source_name:
          type: string
          nullable: true
          maxLength: 100
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          readOnly: true
        image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 2000
        published_at:
          type: string
          format: date-time
        fetched_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - article_url
      - fetched_at
      - id
      - published_at
      - source
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Country:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Full name of the country (e.g., New Zealand).
          maxLength: 100
        code:
          type: string
          description: Two-letter ISO country code (e.g., 'nz').
          maxLength: 2
      required:
      - code
      - id
      - name
    PaginatedArticleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Article'
    PaginatedCountryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedSourceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Source'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserPreferenceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserPreference'
    PaginatedUserRegistrationWithEmailList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserRegistrationWithEmail'
    PatchedUserPreference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        preferred_countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
          readOnly: true
        preferred_sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
          readOnly: true
        keywords:
          description: List of preferred keywords.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preferred_country_codes:
          type: array
          items:
            type: string
            maxLength: 2
          writeOnly: true
        preferred_source_api_ids:
          type: array
          items:
            type: string
            maxLength: 100
          writeOnly: true
    PatchedUserRegistrationWithEmail:
      type: object
      properties:
        username_email:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
    Source:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The display name of the news source (e.g., BBC News).
          maxLength: 150
        api_id:
          type: string
          description: The identifier for the source from NewsAPI.org (e.g., 'bbc-news').
          maxLength: 100
        description:
          type: string
          nullable: true
          description: A description of the source.
        url:
          type: string
          format: uri
          nullable: true
          description: The homepage URL of the source.
          maxLength: 500
        category:
          type: string
          nullable: true
          description: The category of the source (e.g., technology, sports).
          maxLength: 50
        language:
          type: string
          nullable: true
          description: The language of the source (e.g., en).
          maxLength: 10
        country_code:
          type: string
          readOnly: true
        country_name:
          type: string
          readOnly: true
      required:
      - api_id
      - country_code
      - country_name
      - id
      - name
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        bio:
          type: string
          maxLength: 500
        profile_picture:
          type: string
          format: uri
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - id
      - password
      - username
    UserPreference:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        preferred_countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
          readOnly: true
        preferred_sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
          readOnly: true
        keywords:
          description: List of preferred keywords.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        preferred_country_codes:
          type: array
          items:
            type: string
            maxLength: 2
          writeOnly: true
        preferred_source_api_ids:
          type: array
          items:
            type: string
            maxLength: 100
          writeOnly: true
      required:
      - created_at
      - id
      - preferred_countries
      - preferred_sources
      - updated_at
      - user
    UserRegistrationWithEmail:
      type: object
      properties:
        username_email:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
      required:
      - password
      - username_email
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
